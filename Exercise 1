# -*- coding: utf-8 -*-
"""200901008-DS&A-LAB-06

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18f637-ZBdsMfzGOQA2aUqVd-VaG2nxd9
"""

class node:
  def __init__(self,data=None):
    self.data=data
    self.next=None
    print("Node has been created")

class linkedlist:
  def __init__(self):
    self.head=node()
    print("Head is intialized")

  def append(self,data):
    new_node=node(data)
    curr=self.head
    while curr.next!=None:
      curr=curr.next
    curr.next=new_node

  def display(self):
    curr=self.head
    dis=[]
    while curr.next!=None:
      curr=curr.next
      dis.append(curr.data)
    print(dis)

  def delete(self):
    curr=self.head 
    while curr.next.next!=None:
      secondlast_node=curr.next
      curr=curr.next
    curr.next=None
   
  def length(self):
    curr=self.head
    count=0
    while curr.next!=None:
      curr=curr.next
      count=count+1
    return count

  def insert(self,data,index):
    new_node=node(data)
    if (index<1):
      print("Index out of bound")
    elif(index==1):
      new_node.next=self.head
      self.head=new_node
    else:
      curr=self.head 
      for i in range(1,index-1):
        if(curr!=None):
          curr=curr.next
        if(curr!=None):
          new_node.next=curr.next
          curr.next=new_node
        else:
          print("The previous node is null")

  def appendbefore(self,data):
    new_node = node(data)
    new_node.next=self.head
    self.head=new_node

mylist=linkedlist()

mylist.append(1)
mylist.append(2)
mylist.append(3)
mylist.append(4)
mylist.append(5)
mylist.append(6)

mylist.display()

mylist.delete()

mylist.display()

mylist.appendbefore(9)

mylist.insert(9,3)
